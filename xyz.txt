I have attached a screenshot of Account page.
In the top left we have back button.

Then we have Accounts text in bold. In the same level we have Export in the right most. I am removing columns for time being.

Now we gave table with 3 columns.

SOLD TO PARTY, OUTSTANDING (IN LACS) ,  OVERDUE (IN LACS)

I'm using ,"@tanstack/react-table": "^8.13.0",
i have tailwind also intalled. 

FOR Loader, you can below loader
            {loading ? (
                    <div className="flex justify-center items-center h-40">
                        <CircularProgress
                            classNames={{
                                svg: "w-36 h-36 stroke-blue-700",
                                indicator: "stroke-blue-700",
                                track: "stroke-blue-700/5",
                                value: "text-3xl font-semibold text-blue-700",
                            }}
                            aria-label="Loading..."
                            showValueLabel={true}
                            value={value}

                        />
                    </div>

import { CircularProgress } from "@heroui/react";


To get the data use the below function.
import SCVWebAPI from '../../../framework/api';
 const fetchData = async () => {
      setLoading(true);
      try {
        // Replace with your actual API endpoint and request body
        const response = await SCVWebAPI.post(
          '/CompassAccountSummary/GetInvoiceSummary', // Your endpoint
          {}, // headers
          {}, // config
          {
            SoldToParty: '0000102461',
            ancilCustId: '',
          } // request body
        );

        // Transform API response to match your table structure if needed
        const transformedData = response.map(item => ({
          soldToParty: item.SoldToParty || '',
          outstanding: item.Outstanding || '',
          overdue: item.Overdue || '',
        }));

        setData(transformedData);
      } catch (error) {
        alert('Error fetching accounts data:', error);
      } finally {
        setLoading(false);
      }
    };

Then at bottom we have pagination:


Rows per page (10,20,30)

1-5 of 13
and arrow for previous page "<"
and arrow for next page ">"


Give me React code that is 100 % identical to the attached screenshot.
