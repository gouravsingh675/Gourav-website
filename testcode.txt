MOU Repository: path: application\src\main\java\com\tata\tsl\platform\exportorder\model\MOUDbModel.java
package com.tata.tsl.platform.exportorder.model;
 
import lombok.Getter;
import lombok.Setter;
import org.springframework.data.mongodb.core.mapping.Document;
import java.time.LocalDateTime;

import javax.validation.constraints.NotBlank;

import org.springframework.data.annotation.Id;
 
@Getter
@Setter
@Document(collection = "MOU") 
public class MOUDbModel {

    @Id
    private String id;  // Add an ID if it is needed for the MongoDB document

    @NotBlank(message = "Customer Code cannot be blank")
    private String customerCode;

    @NotBlank(message = "MOU Quantity cannot be blank")
    private String mouQuantity;

    @NotBlank(message = "Attachment cannot be blank")
    private String attachment;

    @NotBlank(message = "FY Date cannot be blank")
    private String fyDate;

    @NotBlank(message = "Created By cannot be blank")
    private String createdBy;

    @NotBlank(message = "Updated By cannot be blank")
    private String updatedBy;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    public MOUDbModel() {
    }

    public MOUDbModel(String customerCode, String mouQuantity, String attachment,
                      String createdBy, String updatedBy, String fyDate) {
        this.customerCode = customerCode;
        this.mouQuantity = mouQuantity;
        this.attachment = attachment;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.fyDate = fyDate;
        this.createdAt = LocalDateTime.now();
        this.updatedAt = LocalDateTime.now();
    }
}

MODEL:application\src\main\java\com\tata\tsl\platform\exportorder\model\MOUDbModel.java
package com.tata.tsl.platform.exportorder.model;
 
import lombok.Getter;
import lombok.Setter;
import org.springframework.data.mongodb.core.mapping.Document;
import java.time.LocalDateTime;

import javax.validation.constraints.NotBlank;

import org.springframework.data.annotation.Id;
 
@Getter
@Setter
@Document(collection = "MOU") 
public class MOUDbModel {

    @Id
    private String id;  // Add an ID if it is needed for the MongoDB document

    @NotBlank(message = "Customer Code cannot be blank")
    private String customerCode;

    @NotBlank(message = "MOU Quantity cannot be blank")
    private String mouQuantity;

    @NotBlank(message = "Attachment cannot be blank")
    private String attachment;

    @NotBlank(message = "FY Date cannot be blank")
    private String fyDate;

    @NotBlank(message = "Created By cannot be blank")
    private String createdBy;

    @NotBlank(message = "Updated By cannot be blank")
    private String updatedBy;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    public MOUDbModel() {
    }

    public MOUDbModel(String customerCode, String mouQuantity, String attachment,
                      String createdBy, String updatedBy, String fyDate) {
        this.customerCode = customerCode;
        this.mouQuantity = mouQuantity;
        this.attachment = attachment;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.fyDate = fyDate;
        this.createdAt = LocalDateTime.now();
        this.updatedAt = LocalDateTime.now();
    }
}

Controller: application\src\main\java\com\tata\tsl\platform\exportorder\controller\MOUController.java
package com.tata.tsl.platform.exportorder.controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.tata.tsl.platform.exportorder.dto.FetchMOURequestBody;
import com.tata.tsl.platform.exportorder.dto.MOUResponseDto;
import com.tata.tsl.platform.exportorder.dto.SaveMOURequestBody;
import com.tata.tsl.platform.exportorder.model.MOUDbModel;
import com.tata.tsl.platform.exportorder.service.MOUService;

import java.util.List;

import javax.validation.Valid;
 
@RestController
@RequestMapping("/mou")
@CrossOrigin(origins = "*", allowedHeaders = "*")
public class MOUController {
 
    @Autowired
    private MOUService mouService;
 
 
    // POST API to save MOU

    @PostMapping("/save")
    public ResponseEntity<List<MOUDbModel>> saveMOU(@Valid @RequestBody SaveMOURequestBody saveFYRequestBody) {
        List<MOUDbModel> savedMous = mouService.saveMOU(saveFYRequestBody);
        return ResponseEntity.ok(savedMous);
    }

    @PostMapping("/fetch")
    public ResponseEntity<List<MOUResponseDto>> fetchMous(@Valid @RequestBody FetchMOURequestBody requestBody) {
        List<MOUResponseDto> results = mouService.getMOUsByCustomerCodes(requestBody.getCustomerCodes());
        return ResponseEntity.ok(results);
    }
 
}
 
mou response dto: application\src\main\java\com\tata\tsl\platform\exportorder\dto\MOUResponseDto.java
package com.tata.tsl.platform.exportorder.dto;
 
import lombok.Getter;
import lombok.Setter;
import java.time.LocalDateTime;
 
@Getter
@Setter
public class MOUResponseDto {
    private String customerCode;
    private String mouQuantity;
    private String attachment;
    private String createdBy;
    private String updatedBy;
    private String fyDate;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
}
 
service
package com.tata.tsl.platform.exportorder.service;
import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.tata.tsl.platform.exportorder.model.MOUDbModel;
import com.tata.tsl.platform.exportorder.dto.MOUResponseDto;
import com.tata.tsl.platform.exportorder.dto.SaveMOURequestBody;
import com.tata.tsl.platform.exportorder.repository.MOURepository;
import java.util.List;
import org.springframework.beans.BeanUtils;
import java.util.stream.Collectors;
@Service
public class MOUService {
 
    @Autowired
    private MOURepository mouRepository;

    public List<MOUDbModel> saveMOU(SaveMOURequestBody saveMOURequestBody) {
        List<MOUDbModel> mouList = new ArrayList<>();
    
        for (String customerCode : saveMOURequestBody.getCustomerCodes()) {
            MOUDbModel mou = new MOUDbModel(
                customerCode,
                saveMOURequestBody.getMouQuantity(),
                saveMOURequestBody.getAttachment(),
                saveMOURequestBody.getCreatedBy(),
                saveMOURequestBody.getUpdatedBy(),  
                saveMOURequestBody.getFyDate()
            );
            mouList.add(mou);
        }

        return mouRepository.saveAll(mouList);
    }

    
    public List<MOUResponseDto> getMOUsByCustomerCodes(List<String> customerCodes) {
        return mouRepository.findByCustomerCodeIn(customerCodes)
            .stream()
            .map(mou -> {
                MOUResponseDto dto = new MOUResponseDto();
                BeanUtils.copyProperties(mou, dto);
                return dto;
            })
            .collect(Collectors.toList());
    }
 
}
 
save mou request
package com.tata.tsl.platform.exportorder.dto;
 
import lombok.Getter;
import lombok.Setter;
 
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import java.util.List;
 
@Getter
@Setter
public class SaveMOURequestBody {
 
    @NotNull(message = "Customer Code list cannot be null")
    private List<String> customerCodes;
 
    @NotNull(message = "FY Date cannot be null")
    private String fyDate;
 
    @NotBlank(message = "MOU Quantity cannot be blank")
    private String mouQuantity;
 
    @NotBlank(message = "Attachment cannot be blank")
    private String attachment;
 
    @NotBlank(message = "Created By cannot be blank")
    private String createdBy;
 
    @NotBlank(message = "Updated By cannot be blank")
    private String updatedBy;
}
 
fetchmourequest: application\src\main\java\com\tata\tsl\platform\exportorder\dto\FetchMOURequestBody.java

package com.tata.tsl.platform.exportorder.dto;
 
import lombok.Getter;
import lombok.Setter;
 
import javax.validation.constraints.NotNull;
import java.util.List;
 
@Getter
@Setter
public class FetchMOURequestBody {
    @NotNull(message = "Customer codes list cannot be null")
    private List<String> customerCodes;
}
 
